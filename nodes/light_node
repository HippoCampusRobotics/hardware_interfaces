#!/usr/bin/env python
import rospy
from hippocampus_common.node import Node
from std_msgs.msg import Float64
from RPIO import PWM

LED_PIN = 18
PWM_MIN = 1050
PWM_MAX = 1950
PWM_FREQ = 50


class LightNode(Node):
    def __init__(self, name):
        super(LightNode, self).__init__(name)
        rospy.on_shutdown(self.on_shutdown)
        # GPIO.setwarnings(False)
        self.servo = PWM.Servo()
        self.servo.set_servo(LED_PIN, int((PWM_MIN + PWM_MAX) / 2))

        self.brigthness_sub = rospy.Subscriber("led_brightness",
                                               Float64,
                                               self.set_brightness,
                                               queue_size=1)

    def calc_pwm(self, brightness):
        brightness = max(0, min(1, brightness))
        pwm = int(PWM_MIN + (PWM_MAX - PWM_MIN) * brightness)
        return pwm

    def set_brightness(self, msg):
        pwm = self.calc_pwm(msg.data)
        self.servo.set_servo(LED_PIN, pwm)

    def on_shutdown(self):
        self.servo.stop_servo(LED_PIN)


def main():
    node = LightNode("light")
    node.run()


if __name__ == "__main__":
    main()
